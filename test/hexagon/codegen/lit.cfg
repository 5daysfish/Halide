import os
import sys
import re
import platform

import lit.util
import lit.formats


config.name = 'HexagonHalide'
use_lit_shell = os.environ.get("LIT_USE_INTERNAL_SHELL")
if use_lit_shell:
    # 0 is external, "" is default, and everything else is internal.
    execute_external = (use_lit_shell == "0")
else:
    # Otherwise we default to internal on Windows and external elsewhere, as
    # bash on Windows is usually very slow.
    execute_external = (not sys.platform in ['win32'])

# testFormat: The test format to use to interpret tests.
config.test_format = lit.formats.ShTest(execute_external)

config.suffixes = ['.cpp']
config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = os.path.dirname(__file__)

# Disable glibc malloc/free checking
# This is causing Halide Hexagon tests to fail
# We should investigate the failures separately
config.environment.update({'MALLOC_CHECK_' : '0'})
